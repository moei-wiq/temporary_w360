name: Create or Update Release
run-name: Create or update release for${{ github.event.release.tag_name }} by ${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Is this release a major, minor, or patch release? See https://semver.org for definitions.'
        required: true
        default: 'minor'
        type: choice
        options:
            - major
            - minor
            - patch
#      commit_sha:
#        description: 'Commit SHA to cherry-pick (only required for patch)'
#        required: false
#        type: string
      release_version:
        description: 'Release version (only required for non-patch)'
        default: 'v1.0.0'
        required: false
        type: string

jobs:
  validate-source-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Validate source branch
        run: |
          if [[ "${{ github.event.inputs.release_type }}" != "patch" && "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "Error: Can only create/update release from the main branch for non-patch releases"
            exit 1
          elif [[ "${{ github.event.inputs.release_type }}" == "patch" && ! "${{ github.ref }}" =~ ^refs/heads/release/ ]]; then
            echo "Error: Can only create patch releases from existing release/* branches"
            exit 1
          fi

#  bump-version:
#    needs: validate-source-branch
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Authenticate with github
#        run: |
#          git config --global user.name 'github-actions[bot]'
#          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
#          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '16'
#
#      - name: Push changes
#        run: |
#          git push --follow-tags origin main
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    needs: validate-source-branch
    if: ${{ github.event.inputs.release_type != 'patch' }}
    runs-on: ubuntu-latest
    environment:
      name: prod
    steps:
      - name: Checkout the branch the workflow is run from
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          persist-credentials: false

      - name: Authenticate with github
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag main branch
        run: |
          git fetch origin main
          git checkout main
          git tag v${{ github.event.inputs.release_type }}
          git push origin v${{ github.event.inputs.release_type }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create & tag release branch
        run: |
          git checkout -b release/v${{ github.event.inputs.release_type }}
          git tag v${{ github.event.inputs.release_type }}-release
          git push origin release/${{ github.event.inputs.release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.event.inputs.release_type }}
          release_name: Release ${{ github.event.inputs.release_type }}
          body: |
            Release ${{ github.event.inputs.release_type }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#  cherry-pick-commit:
#    needs: validate-source-branch
#    if: ${{ github.event.inputs.release_type == 'patch' }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the branch the workflow is run from
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.head_ref }}
#          persist-credentials: false
#      - name: Cherry-pick commit from main
#        run: |
#          git config --global user.name 'github-actions[bot]'
#          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
#          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
#          git fetch origin main
#          git cherry-pick origin/main ${{ github.event.inputs.commit_sha }}
#          git push origin ${{ github.head_ref }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}