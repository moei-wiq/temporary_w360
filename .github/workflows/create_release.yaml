name: Create Release
run-name: Release ${{ github.event.release.tag_name }} by ${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Is this release a major, minor, or patch release? See https://semver.org for definitions.'
        required: true
        default: 'minor'
        type: choice
        options:
            - major
            - minor
            - patch
      commit_sha:
        description: 'Commit SHA to cherry-pick'
        required: true
        type: string
      release_branch:
        description: 'Existing release branch to merge into (release/vX.Y.Z)'
        required: true
        type: string

jobs:
  validate-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Validate release branch
        run: |
          if [[ ! "${{ github.event.inputs.release_branch }}" =~ ^release/ ]]; then
            echo "Error: release_branch must be prefixed by 'release/'"
            exit 1
          fi

  validate-source-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Validate release branch
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "Error: Can only create/update release from the main branch"
            exit 1
          fi

  create-release-branch:
    if: ${{ github.event.inputs.release_type != 'patch' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    environment:
      name: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Create release branch
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout -b release/${{ github.event.inputs.release_version }}
          git push origin release/${{ github.event.inputs.release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cherry-pick-commit:
    needs: validate-branch
    if: ${{ github.event.inputs.release_type == 'patch' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Cherry-pick commit
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout ${{ github.event.inputs.release_branch }}
          git cherry-pick ${{ github.event.inputs.commit_sha }}
          git push origin ${{ github.event.inputs.release_branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}